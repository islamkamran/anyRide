"""Tables migration to DB

Revision ID: ad9a835df454
Revises: ccd71eb71f34
Create Date: 2025-08-31 13:35:16.425375

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'ad9a835df454'
down_revision: Union[str, None] = 'ccd71eb71f34'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fk_user_id', sa.Integer(), nullable=False),
    sa.Column('Fav_start_location', sa.String(length=255), nullable=True),
    sa.Column('Fav_end_location', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['fk_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fk_user_id')
    )
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_table('drivers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fk_user_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('license_number', sa.String(length=255), nullable=False),
    sa.Column('experience', sa.String(length=255), nullable=True),
    sa.Column('total_trips', sa.String(length=255), nullable=True),
    sa.Column('total_earnings', sa.String(length=255), nullable=True),
    sa.Column('account_status', sa.String(length=255), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('current_location', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['fk_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fk_user_id')
    )
    op.create_index(op.f('ix_drivers_id'), 'drivers', ['id'], unique=False)
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fk_user_id', sa.Integer(), nullable=False),
    sa.Column('dob', sa.DateTime(), nullable=True),
    sa.Column('emergency_contact', sa.String(length=255), nullable=False),
    sa.Column('hire_date', sa.DateTime(), nullable=True),
    sa.Column('job_title', sa.String(length=255), nullable=True),
    sa.Column('department', sa.String(length=255), nullable=True),
    sa.Column('reporting_manager', sa.String(length=255), nullable=True),
    sa.Column('employment_type', sa.String(length=255), nullable=True),
    sa.Column('role', sa.String(length=255), nullable=True),
    sa.Column('salary', sa.Float(), nullable=True),
    sa.Column('benefits', sa.String(length=255), nullable=True),
    sa.Column('performance', sa.String(length=255), nullable=True),
    sa.Column('skills', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['fk_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fk_user_id')
    )
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_table('vehicles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fk_driver_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('color', sa.String(length=255), nullable=True),
    sa.Column('body_type', sa.String(length=255), nullable=True),
    sa.Column('make', sa.String(length=255), nullable=True),
    sa.Column('model', sa.String(length=255), nullable=True),
    sa.Column('chassis_number', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('condition', sa.String(length=255), nullable=True),
    sa.Column('features', sa.String(length=255), nullable=True),
    sa.Column('drive_type', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['fk_driver_id'], ['drivers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicles_id'), 'vehicles', ['id'], unique=False)
    op.create_table('rides',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fk_customer_id', sa.Integer(), nullable=False),
    sa.Column('fk_driver_id', sa.Integer(), nullable=False),
    sa.Column('fk_vehicle_id', sa.Integer(), nullable=False),
    sa.Column('ride_category', sa.String(length=255), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('base_price', sa.Float(), nullable=True),
    sa.Column('ride_price', sa.Float(), nullable=True),
    sa.Column('ride_total_price', sa.Float(), nullable=True),
    sa.Column('starting_location', sa.String(length=255), nullable=True),
    sa.Column('ending_location', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['fk_customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['fk_driver_id'], ['drivers.id'], ),
    sa.ForeignKeyConstraint(['fk_vehicle_id'], ['vehicles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rides_id'), 'rides', ['id'], unique=False)
    op.add_column('users', sa.Column('gender', sa.String(length=25), nullable=False))
    op.alter_column('users', 'uid',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'original_password',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'password',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.create_index(op.f('ix_users_gender'), 'users', ['gender'], unique=False)
    op.drop_column('users', 'unitnumber')
    op.drop_column('users', 'status')
    op.drop_column('users', 'role')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('role', mysql.VARCHAR(length=55), nullable=True))
    op.add_column('users', sa.Column('status', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('unitnumber', mysql.VARCHAR(length=15), nullable=True))
    op.drop_index(op.f('ix_users_gender'), table_name='users')
    op.alter_column('users', 'password',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'original_password',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'uid',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.drop_column('users', 'gender')
    op.drop_index(op.f('ix_rides_id'), table_name='rides')
    op.drop_table('rides')
    op.drop_index(op.f('ix_vehicles_id'), table_name='vehicles')
    op.drop_table('vehicles')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_table('employees')
    op.drop_index(op.f('ix_drivers_id'), table_name='drivers')
    op.drop_table('drivers')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_table('customers')
    # ### end Alembic commands ###
